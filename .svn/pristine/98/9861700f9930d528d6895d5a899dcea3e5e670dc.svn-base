package com.xt.ptus.mt.service.impl;

import java.util.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.xt.ptus.base.impl.BaseServiceImpl;
import com.xt.ptus.constants.Constants;
import com.xt.ptus.mt.dao.MtIntegrateDao;
import com.xt.ptus.mt.dao.MtIntegrateExchangeLogDao;
import com.xt.ptus.mt.dao.MtIntegrateGoodsDao;
import com.xt.ptus.mt.entity.MtIntegrate;
import com.xt.ptus.mt.entity.MtIntegrateExchangeLog;
import com.xt.ptus.mt.entity.MtIntegrateGoods;
import com.xt.ptus.mt.service.MtIntegrateGoodsService;
import com.xt.ptus.util.StringUtil;

@Service
public class MtIntegrateGoodsServiceImpl extends BaseServiceImpl<MtIntegrateGoods> implements MtIntegrateGoodsService {

	@Autowired
	private MtIntegrateDao integrateDao;
	
	@Autowired
	private MtIntegrateExchangeLogDao logDao;
	
	@Autowired
	private MtIntegrateGoodsDao goodsDao;


	@Override
	public MtIntegrateGoods doDelGoods(String id, String removetor) {
		MtIntegrateGoods integrateGoods = goodsDao.get(id, MtIntegrateGoods.class);
		if(integrateGoods != null){
			integrateGoods.setRemovetor(Integer.parseInt(removetor));
			integrateGoods.setRemovedTime(new Date());
			integrateGoods.setIfRemove(Constants.INTEGRATE_GOODS_ROMOVE_YES);
			
			goodsDao.save(integrateGoods);
		}
		
		return integrateGoods;
	}

	@Override
	public void updateGood(MtIntegrateGoods good, String operatorId) {
		
		if(good != null){
			if(!StringUtil.IsNullOrEmpty(good.getId()) && Integer.parseInt(good.getId()) > 0){
				good.setUpdator(Integer.parseInt(operatorId));
				good.setUpdateTime(new Date());
			} else {
				good.setCreator(Integer.parseInt(operatorId));
				good.setCreateTime(new Date());
			}
			
			this.update(good);
		}
	}

	/**
	 * 兑换商品
	 * @throws Exception 
	 */
	@Override
	public void exchangeGoods(String userId, String integrateId, int count, String address, String receivor, String phoneNumber) throws Exception {
		
		
		MtIntegrateGoods good = goodsDao.get(integrateId, MtIntegrateGoods.class);
		if(good != null && count > 0 && userId != null){
			if(good.getCount() - count >= 0){
				if(integrateDao.getUserIntegrate(Integer.parseInt(userId)) >= good.getPrice() * count){
					MtIntegrate integrate = new MtIntegrate();
					integrate.setAmount(count * good.getPrice());
					integrate.setUserId(Integer.parseInt(userId));
					integrate.setAmount(-good.getPrice() * count);
					integrate.setTarget("兑换商品——" + good.getName());
					integrate.setRemark("兑换商品" );
					integrate.setCreateTime(new Date());
					integrateDao.save(integrate);
					
					MtIntegrateExchangeLog log = new MtIntegrateExchangeLog(); 
					log.setUserId(Integer.parseInt(userId));
					log.setGoodsId(Integer.parseInt(integrateId));
					log.setCount(count);
					log.setExchangeTime(new Date());
					log.setStatus(Constants.INTEGRATE_GOODS_STATUS_NEED_EXCHANGE);
					log.setRemark("兑换商品——" + good.getName());
					log.setGoodName(good.getName());
					log.setReceivor(receivor);
					log.setAddress(address);
					log.setPrice(good.getPrice());
					log.setPhoneNumber(phoneNumber);
					logDao.save(log);
					
					good.setCount(good.getCount() - count);
					goodsDao.update(good);
				} else {
					throw new Exception("兑换失败:e币余额不足");
				}
			} else {
				throw new Exception("兑换失败:商品数量不足");
			}
		}
	}

}
