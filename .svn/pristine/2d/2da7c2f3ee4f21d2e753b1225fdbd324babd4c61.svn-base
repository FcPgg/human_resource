package com.xt.ptus.mt.controller.mobile;

import javax.annotation.Resource;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.xt.ptus.base.BaseController;
import com.xt.ptus.mt.entity.MtPanicBuying;
import com.xt.ptus.mt.service.MtPanicBuyingService;
import com.xt.ptus.obejcts.Result;

@Controller
@RequestMapping(value = "/mt/mobile/mtPanicBuying/")
public class MtPanicBuyingControllerMobile extends BaseController<MtPanicBuying> {

	@Resource
	private MtPanicBuyingService service;

	private static Logger logger = Logger.getLogger(MtPanicBuying.class);

	// 限时抢商品列表(正在进行)
	@RequestMapping("getPanicBuyingList")
	@ResponseBody
	public Result getPanicBuyingList(@RequestParam("page")String page, @RequestParam("rows")String rows) {

		int pager = 1;
		int limit = 10;
		
		try {
			pager = Integer.parseInt(page);
			limit = Integer.parseInt(rows);
		} catch (Exception e) {
			logger.error("分页参数转换失败，使用默认分页{page:1,rows:10}");
		}
		Result result = new Result();
		try {
			result.setData(service.getPanicBuyingList(pager, limit));
			result.setSuccess(true);
			result.setMessage("获取商家成功");
		} catch (Exception e) {
			result.setSuccess(false);
			result.setMessage("获取商家失败");
			result.setError(e.getMessage());
			logger.error(e);
		}
		return result;
	}

	// 即将开始
	@RequestMapping("getBeginMinuteList")
	@ResponseBody
	public Result getBeginMinuteList(@RequestParam("page")String page, @RequestParam("rows")String rows) {
		
		int pager = 1;
		int limit = 10;
		
		try {
			pager = Integer.parseInt(page);
			limit = Integer.parseInt(rows);
		} catch (Exception e) {
			logger.error("分页参数转换失败，使用默认分页{page:1,rows:10}");
		}

		Result result = new Result();
		try {
			result.setData(service.getBeginMinuteList(pager, limit));
			result.setSuccess(true);
			result.setMessage("获取商家成功");
		} catch (Exception e) {
			result.setSuccess(false);
			result.setMessage("获取商家失败");
			result.setError(e.getMessage());
			logger.error(e);
		}
		return result;

	}

	// 即将结束
	@RequestMapping("getSoonEndMinuteList")
	@ResponseBody
	public Result getSoonEndMinuteList(@RequestParam("page")String page, @RequestParam("rows")String rows) {

		int pager = 1;
		int limit = 10;
		
		try {
			pager = Integer.parseInt(page);
			limit = Integer.parseInt(rows);
		} catch (Exception e) {
			logger.error("分页参数转换失败，使用默认分页{page:1,rows:10}");
		}
		
		Result result = new Result();
		try {
			result.setData(service.getSoonEndMinuteList(pager, limit));
			result.setSuccess(true);
			result.setMessage("获取商家成功");
		} catch (Exception e) {
			result.setSuccess(false);
			result.setMessage("获取商家失败");
			result.setError(e.getMessage());
		}
		return result;
	}
	
	@ResponseBody
	@RequestMapping("getPanicBuying")
	public Result getPanicBuying(@RequestParam("id")String id){
		Result result = new Result();

		try {
			result.setData(service.get(id));
			result.setSuccess(true);
		} catch (Exception e) {
			result.setSuccess(false);
			result.setError(e.getMessage());
			result.setMessage("操作失败");
			logger.error(e);
		}
		return result;
	}
}
