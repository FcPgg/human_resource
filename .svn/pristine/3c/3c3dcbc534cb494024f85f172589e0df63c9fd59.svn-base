package com.xt.ptus.mt.controller;

import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Property;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.xt.ptus.base.BaseController;
import com.xt.ptus.constants.Constants;
import com.xt.ptus.mt.entity.MtCreditOrder;
import com.xt.ptus.mt.entity.MtIntegrateExchangeLog;
import com.xt.ptus.mt.service.MtIntegrateExchangeLogService;
import com.xt.ptus.obejcts.Result;
import com.xt.ptus.util.RequestUtil;


@Controller
@RequestMapping(value = "/mt/mtIntegrateExchangeLog/")
public class MtIntegrateExchangeLogController extends BaseController<MtIntegrateExchangeLog> {

	private static Logger logger = Logger.getLogger(MtOrderGoodsController.class);
	@Resource
	private MtIntegrateExchangeLogService service;
	
	/**
	 * 积分兑换订单列表
	 */
	
	@ResponseBody
	@RequestMapping("listNormalIntegrateExchangeLogOrderList")
	public Result listNormalIntegrateExchangeLogOrderList(HttpServletRequest request){
		Result result = new Result();
		
		int page = 1;
		int rows = 10;
		try {
			page = Integer.parseInt(request.getParameter("page"));
			rows = Integer.parseInt(request.getParameter("rows"));
		} catch(Exception e ){
			logger.error("分页数据转换异常，使用默认页码:page = 1，行数:rows=10");
		}
                                                                                                                                                                                                                                         
		try {
			Map<String, Object> params = RequestUtil.requestParamsToMap(request);
			
			DetachedCriteria integrateExchangeLogOrderList = DetachedCriteria.forClass(MtIntegrateExchangeLog.class);
			integrateExchangeLogOrderList.add(Property.forName("status").eq(Constants.INTEGRATE_GOODS_STATUS_NEED_EXCHANGE));
			integrateExchangeLogOrderList.addOrder(Order.desc("exchangeTime"));
			result.setData(service.getWithPagination(integrateExchangeLogOrderList, page, rows, "id"));
			result.setSuccess(true);
		} catch (Exception e) {
			result.setSuccess(false);
			result.setError(e.getMessage());
			result.setMessage("操作失败");
			logger.error(e);
		}
		return result;
	}	
	
	
	/**
	 * 修改积分状态(发货)
	 */
	@RequestMapping("updateIntegrateExchangeLogStatus")
	@ResponseBody
	public Result updateIntegrateExchangeLogStatus(HttpServletRequest request ){
		
		Result result = new Result();
		try {
			String id = request.getParameter("orderId");
			String streamCompanyNo = request.getParameter("streamCompanyNo");
			String trackingNo = request.getParameter("trackingNo");
			result.setData(service.integrateExchangeLogStatus(id,streamCompanyNo,trackingNo));
			result.setSuccess(true);
		} catch (Exception e) {
			result.setSuccess(false);
			result.setMessage("操作失败");
			result.setError(e.getMessage());
			logger.error(e);
		}
		return result;
	}
	
}
