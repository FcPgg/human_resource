package com.xt.ptus.mt.controller;

import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Property;
import org.hibernate.criterion.Restrictions;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.xt.ptus.base.BaseController;
import com.xt.ptus.constants.Constants;
import com.xt.ptus.helper.HttpServletRequestHelper;
import com.xt.ptus.mt.entity.MtIntegrateGoods;
import com.xt.ptus.mt.service.MtIntegrateGoodsService;
import com.xt.ptus.obejcts.Result;
import com.xt.ptus.util.RequestUtil;

@Controller
@RequestMapping(value = "mt/integrateGoods")
public class MtIntegrateGoodsController extends BaseController<MtIntegrateGoods> {

	private static Logger logger = Logger.getLogger(MtIntegrateGoodsController.class);

	@Resource
	private MtIntegrateGoodsService service;

	/**
	 * 获取正常积分商品数据
	 */
	@ResponseBody
	@RequestMapping("listNormalIntegrateGoods")
	public Result listNormalIntegrateGoods(HttpServletRequest request) {
		Result result = new Result();

		int page = 1;
		int rows = 10;
		try {
			page = Integer.parseInt(request.getParameter("page"));
			rows = Integer.parseInt(request.getParameter("rows"));
		} catch (Exception e) {
			logger.error("分页数据转换异常，使用默认页码:page = 1，行数:rows=10");
		}

		try {
			Map<String, Object> params = RequestUtil.requestParamsToMap(request);
			DetachedCriteria dc = DetachedCriteria.forClass(MtIntegrateGoods.class);
			dc.add(Restrictions.or(Restrictions.eq("ifRemove", Constants.INTEGRATE_GOODS_UNREMOVE), Restrictions.isNull("ifRemove")));
			result.setData(service.getWithPagination(dc, page, rows, "id"));
			result.setSuccess(true);
		} catch (Exception e) {
			result.setSuccess(false);
			result.setError(e.getMessage());
			result.setMessage("操作失败");
			logger.error(e);
		}
		return result;
	}

	/**
	 * 更新积分商品
	 */
	@ResponseBody
	@RequestMapping("updateIntegrateGoods")
	public Result updateIntegrateGoods(MtIntegrateGoods good, HttpServletRequest request) {

		Result result = new Result();
		try {
			service.updateGood(good, HttpServletRequestHelper.getCurrentUser(request).getId());
			result.setData(good);
			result.setSuccess(true);
		} catch (Exception e) {
			result.setSuccess(false);
			result.setMessage("操作失败");
			result.setError(e.getMessage());
			logger.error(e);
		}
		return result;

	}

	/**
	 * 删除商品（下架，不是真正删除数据）
	 */
	@ResponseBody
	@RequestMapping("doDelGoods")
	public Result doDelGoods(HttpServletRequest request, @RequestParam("id") String id, @RequestParam("removetor") String removetor) {
		Result result = new Result();
		try {
			result.setData(service.doDelGoods(id, removetor));
			result.setSuccess(true);
		} catch (Exception e) {
			result.setSuccess(false);
			result.setMessage("操作失败");
			result.setError(e.getMessage());
			logger.error(e);
		}
		return result;
	}
}
