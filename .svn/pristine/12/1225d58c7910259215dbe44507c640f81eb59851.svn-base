package  com.xt.ptus.mt.dao.impl;

import java.util.List;

import org.hibernate.SQLQuery;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Property;
import org.springframework.stereotype.Repository;

import com.xt.ptus.base.impl.BaseDaoImpl;
import com.xt.ptus.constants.Constants;
import com.xt.ptus.mt.dao.MtUserAddressDao;
import com.xt.ptus.mt.entity.MtUserAddress;

@Repository
public class MtUserAddressDaoImpl extends BaseDaoImpl<MtUserAddress> implements MtUserAddressDao{

	@Override
	public List<MtUserAddress> getAddressByUserId(String userId) {
		return getCurrentSession().createCriteria(MtUserAddress.class).add(Property.forName("userId").eq(Integer.parseInt(userId))).addOrder(Order.desc("id")).addOrder(Order.asc("ifDefault")).list();
	}

	@Override
	public void resetAddressByUserId(int userId) {
		SQLQuery query = getCurrentSession().createSQLQuery("update mt_user_address set if_default = 1 where user_id = :userId");
		query.setParameter("userId", userId);
		query.executeUpdate();
	}

	@Override
	public MtUserAddress getDefaultAddressByUserId(String userId) {
		return (MtUserAddress) getCurrentSession().createCriteria(MtUserAddress.class)
				.add(Property.forName("userId").eq(Integer.parseInt(userId)))
				.add(Property.forName("ifDefault").eq(Constants.USER_SHIPPING_ADDRESS_DEFAULT))
				.uniqueResult();
	}
}
