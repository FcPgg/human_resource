package com.xt.ptus.mt.controller;

import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.hibernate.Session;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Property;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.xt.ptus.base.BaseController;
import com.xt.ptus.mt.entity.MtGoods;
import com.xt.ptus.mt.entity.MtGoodsValuation;
import com.xt.ptus.mt.entity.MtUserAttention;
import com.xt.ptus.mt.service.MtGoodsValuationService;
import com.xt.ptus.obejcts.Result;
import com.xt.ptus.util.RequestUtil;

@Controller
@RequestMapping(value = "/mt/mtGoodsValuation/")
public class MtGoodsValuationController extends BaseController<MtGoodsValuation> {
	
	private static Logger logger = Logger.getLogger(MtOrderGoodsController.class);
	@Resource
	private MtGoodsValuationService service;
	/**
	 * 通过商家获取相关评论List
	 */
//	@ResponseBody
//	@RequestMapping("getGoodsValuationBySellerId")
//	public Result getGoodsValuationBySellerId(HttpServletRequest request){
//		
//		Map<String, Object> params = RequestUtil.requestParamsToMap(request);
//		
//		Result result = new Result();
//		try {
//			result.setData(service.getGoodsValuationBySellerId(params.get("sellerId").toString()));
//			result.setSuccess(true);
//		} catch (Exception e) {
//			result.setSuccess(false);
//			result.setMessage("操作失败");
//			result.setError(e.getMessage());
//			logger.error(e);
//		}
//		return result;
//	}
//	
	
	@ResponseBody
	@RequestMapping("listNormalIntegrateGoodsValuation")
	public Result listNormalIntegrateGoodsValuation(HttpServletRequest request){
		Result result = new Result();
		
		int page = 1;
		int rows = 10;
		try {
			page = Integer.parseInt(request.getParameter("page"));
			rows = Integer.parseInt(request.getParameter("rows"));
		} catch(Exception e ){
			logger.error("分页数据转换异常，使用默认页码:page = 1，行数:rows=10");
		}
                                                                                                                                                                                                                                         
		try {
			Map<String, Object> params = RequestUtil.requestParamsToMap(request);
			
		    //用户是对商家的商品进行评论
			DetachedCriteria goodsId = DetachedCriteria.forClass(MtGoods.class);
			goodsId.add(Property.forName("sellerId").eq(Integer.parseInt(params.get("sellerId").toString())));
			goodsId.setProjection(Property.forName("id"));
			
			DetachedCriteria goodsValuation = DetachedCriteria.forClass(MtGoodsValuation.class);
			goodsValuation.add(Property.forName("goodsId").in(goodsId));
			
			result.setData(service.getWithPagination(goodsValuation, page, rows, "id"));
			result.setSuccess(true);
		} catch (Exception e) {
			result.setSuccess(false);
			result.setError(e.getMessage());
			result.setMessage("操作失败");
			logger.error(e);
		}
		return result;
	}

	/**
	 * 获取单条评论和管理员回复
	 */
	@ResponseBody
	@RequestMapping("getValuationReplyInfoById")
	public Result getValuationReplyInfoById(HttpServletRequest request , @RequestParam("id")String id,@RequestParam("sellerId")String sellerId){
		
		Result result = new Result();
		try {
			result.setData(service.getValuationReplyInfoById(id,sellerId));
			result.setSuccess(true);
		} catch (Exception e) {
			result.setSuccess(false);
			result.setMessage("操作失败");
			result.setError(e.getMessage());
			logger.error(e);
		}
		return result;
		
	}
}
